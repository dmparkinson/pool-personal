package negocio;
/*
 * Clase que controla la  interfaz de la ventana GUIOracionPrincipal, adedmas de controlar los metodos
 * necesarios para obtener la clasificacion de las palabras, las palabras, las raices, la oracion principal
 *  y la busqueda de palabras.
 *  
 * Tarea Programada del curso Algoritmos y Estructura de Datos de la Unuversidad de Costa Rica
 * @version  2.0  Mayo 2018
 * @author  Daniela Montero
 */

import presentacion.GUIDocumento;
import presentacion.GUIOracionPrincipal;
import dominio.*;
import datos.Archivo;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ControladoraGUIOoracionP implements ActionListener{
	
	GUIOracionPrincipal guiOP;
	ListaEnlazada listaP;	
	LogicaOracionPrincipal logO;
	LogicaBusquedaPalabras logB;
	LogicaGUI log;
	LogicaListaPalabras logP;
	LogicaListaRaiz logR;
	Fichero direccion;
	Archivo arch;
	Palabra palabra;
	Fichero fichero;
	
	private String seleccion;
	
	public ControladoraGUIOoracionP(GUIOracionPrincipal guiP,LogicaGUI logD,LogicaListaPalabras logP,Fichero fichero) {
		
		arch = new  Archivo();
		palabra = new Palabra();
		listaP = new ListaEnlazada();
		logO = new LogicaOracionPrincipal();
		logB = new LogicaBusquedaPalabras();
		logR = new LogicaListaRaiz();
		
		guiOP = guiP;
		
		this.fichero = fichero;
		this.logP = logP;
		this.log = logD;
		
		
				
		inicializadorAcciones();
	}


	public void inicializadorAcciones() {
		guiOP.getBObtener().addActionListener(this);
		guiOP.getBRetroceder().addActionListener(this);
		guiOP.getBIniciar().addActionListener(this);
		;

	}
	
	public void actionPerformed(ActionEvent e) {
		
		if(e.getSource() == guiOP.getBIniciar() ) {
			guiOP.getBIniciar().setVisible(false);
			guiOP.getPOpciones().setVisible(true);
			
			String etiqueta = arch.obtenerEtiqueta2(fichero.getDireccion()+"");
						
			String informacion = arch.leerArchivo("src/ficheros/archivos de texto/"+etiqueta);	
            String infoFiltrada = log.obtenerTexto(informacion,"[^A-Za-zéáíóú]"," ");//[^A-Za-zéáíóú]
            
            // Lista de palabras
            logP.obtenerPalabras(infoFiltrada,listaP);
            guiOP.getTAPalabras().append(logP.imprimirTodo(listaP,"\n"));
            
            //Clasificacion de palabras
			logP.clasificarPalabras(listaP, palabra);
			
			//Oracion Principal
			guiOP.getTAOracion_Principal().append(logO.obtener(informacion,listaP));			
			
			
		}
		
		
		if(e.getSource() == guiOP.getBObtener()) {
			
			guiOP.getBRetroceder().setVisible(true);
			guiOP.getPOpciones().setVisible(false);
			
			seleccion = getEleccion();
			if(seleccion == "Lista de palabras") {
				guiOP.getPPalabras().setVisible(true);
			}
			else if(seleccion == "Oracion principal") {
				guiOP.getPOracion_Principal().setVisible(true);
			}
			else if(seleccion == "Clasificacion de acentuacion") {
				guiOP.gettagudas().append(palabra.getagudas());
				guiOP.gettagraves().append(palabra.getgraves());
				guiOP.gettaesdrujulas().append(palabra.getesdrujulas());
									
				guiOP.getPSilabas().setVisible(true);
			}

		}
		
		if(e.getSource() == guiOP.getBRetroceder()) {

			guiOP.getBRetroceder().setVisible(false);
			guiOP.getPOpciones().setVisible(true);
			
			if(seleccion == "Lista de palabras") {
				guiOP.getPPalabras().setVisible(false);
			}
			else if(seleccion == "Oracion principal") {
				guiOP.getPOracion_Principal().setVisible(false);
			}
			else if(seleccion == "Clasificacion de acentuacion") {
				guiOP.getPSilabas().setVisible(false);
			}
		}
	}
	
	  
	public String getEleccion(){
		return guiOP.getBGOpciones().getSelection().getActionCommand();
	}
	
	private void setSeleccion() {
		seleccion = null;
	}
	
	public String getSeleccion() {
		return seleccion;
	}
		  

}
